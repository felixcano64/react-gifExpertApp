{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAEtC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCRAK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCKXK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPjB,EAAQC,GACPiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGnB,CAACb,IAEIc,EDd0BK,CAAcnB,GAAlCU,EAFwB,EAE7BJ,KAAcO,EAFe,EAEfA,QAEtB,OACI,qCACI,6BAAMb,IACLa,GAAW,4CACZ,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADAA,EAAIhB,aEZxB2B,EAAe,WAAO,IAAD,EAEMzC,mBAAU,CAAC,cAFjB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAIA,6BAEQ2C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCrBpCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec80aec3.chunk.js","sourcesContent":["\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type = 'text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nimport React from 'react';\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n    export const getGifs = async (category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=GwKnfa2EDmVY89OmIx3ZULTvj5z3DX5y`\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n    }\r\n","\r\n\r\nimport React from 'react';\r\nimport { GifGridItem } from '../components/GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images , loading} = useFetchGifs( category );   \r\n    \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img => (     \r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            }); \r\n        })\r\n    },[category]);\r\n\r\n    return state;\r\n\r\n}\r\n\r\n\r\n","\r\n\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['one punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     //setCategories( [...categories, 'HunterXHunter' ]);\r\n    //     setCategories( cats => [...cats, 'HunterXHunter' ]);\r\n    // };\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr />\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            <ul>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}